#!/usr/bin/env bash

# Copyright Â© 2017-2021 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

usage()
{
    cat <<EOF
Usage:
  $prog URL DESTDIR
  $prog -m URL
URLs: https://github.com/OWNER/REPO/runs/RUNID
EOF
}

get_curl_config()
{
    printf 'header = "Authorization: token %s"\n' "$github_token"
    if [ -n "$cacert" ]
    then
        printf 'capath = "/nonexistent"\n'
        printf 'cacert = "%s"\n' "$cacert"
    fi
}

set -e -u
prog="${0##*/}"
cacert=$(git -C / config --get-urlmatch http.sslCAInfo https://api.github.com/) || true
github_token=$(perl -n -E '/^token\s*=\s*(\S+)/ and say $1' "${XDG_DATA_HOME:-$HOME/.config}"/cligh/cligh.conf)
mc=
while getopts 'mh-:' opt
do
    case "$opt" in
        m)
            mc=y;;
        h)
            usage
            exit 0;;
        -)
            if [[ $OPTARG == help ]]; then
                usage
                exit 0
            else
                usage >&2
                exit 1
            fi
            ;;
        *) exit 1;;
    esac
done
shift $((OPTIND - 1))
if [ $# -lt 1 ]
then
    usage >&2
    exit 1
fi
url="$1"
re='^https://github[.]com/([^/]+/[^/]+)/actions/runs/([0-9]+)([?].*)?$'
if [[ $url =~ $re ]]
then
    repo=${BASH_REMATCH[1]}
    runid=${BASH_REMATCH[2]}
else
    usage >&2
    exit 1
fi
if [ -n "$mc" ]
then
    if [ $# -ne 1 ]
    then
        usage >&2
        exit 1
    fi
	mc -h > /dev/null
    destdir="${TMPDIR:-/tmp}/github-actions-logs-${repo//\//-}-$runid"
    if ! mkdir -m 700 "$destdir" 2>/dev/null
    then
        destdir=$(mktemp -d "${destdir}.XXXXXX")
    fi
else
    if [ $# -ne 2 ]
    then
        usage >&2
        exit 1
    fi
    destdir="$2"
fi
if [ -d "$destdir" ]
then
    nonempty=$(find "$destdir/" -maxdepth 0 -empty)
    if [[ -z $nonempty ]]
    then
        printf '%s: error: output dir not empty: %s\n' "$prog" "$destdir" >&2
        exit 1
    fi
else
    mkdir "$destdir"
fi
cd "$destdir"
unzip -h >/dev/null
tmpdir=$(mktemp -d -t github-actions-logs.XXXXXX)
url="https://api.github.com/repos/$repo/actions/runs/$runid/logs"
printf '%s %s\n' GET "$url" >&2
curl \
    --silent --fail --show-error \
    -K <(get_curl_config) \
    -H 'User-Agent: github-toolbox (https://github.com/jwilk/github-toolbox)' \
    -H 'Accept: application/vnd.github.v3+json' \
    -L \
    "$url" > "$tmpdir/tmp.zip"
unzip "$tmpdir/tmp.zip"
rm -rf "$tmpdir"
if [ -n "$mc" ]
then
    exec mc "$destdir"
fi

# vim:ts=4 sts=4 sw=4 et
