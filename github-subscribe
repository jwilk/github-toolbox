#!/usr/bin/env bash

# Copyright Â© 2022 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

set -e -u

prog=${0##*/}
usage()
{
    cat <<EOF
Usage: $prog URL
URLs:
  https://github.com/OWNER/REPO/issues/N
  https://github.com/OWNER/REPO/pull/N
EOF
}

if [ $# -ne 1 ]
then
    usage >&2
    exit 1
fi
url="$1"
re='^https://github[.]com/([^/]+)/([^/]+)/(issues|pull)/([0-9]+)$'
if [[ $url =~ $re ]]
then
    owner=${BASH_REMATCH[1]}
    repo=${BASH_REMATCH[2]}
    number=${BASH_REMATCH[4]}
else
    usage >&2
    exit 1
fi
case ${0##*-} in
    subscribe)
        state=SUBSCRIBED;;
    unsubscribe)
        state=UNSUBSCRIBED;;
    *)
        echo "$prog: command not implemented" >&2
        exit 1
esac
# shellcheck disable=SC2016
query='
    query($owner: String!, $repo: String!, $number: Int!) {
        repository(owner:$owner, name:$repo) {
            issue(number:$number) {
                id
            }
        }
    }
'
node_id=$(gh api graphql -F owner="$owner" -F repo="$repo" -F number="$number" -f query="$query" -q .data.repository.issue.id)
# shellcheck disable=SC2016
query='
    mutation ($node_id: ID!, $state: SubscriptionState!) {
        updateSubscription(input: {subscribableId: $node_id, state: $state}) {
            clientMutationId
        }
    }
'
gh api graphql -F node_id="$node_id" -F state="$state" -f query="$query" --silent
# shellcheck disable=SC2016
query='
    query($owner: String!, $repo: String!, $number: Int!) {
        repository(owner:$owner, name:$repo) {
            issue(number:$number) {
                viewerSubscription
            }
        }
    }
'
status=$(gh api graphql -F owner="$owner" -F repo="$repo" -F number="$number" -f query="$query" -q .data.repository.issue.viewerSubscription)
echo "$url: $status"

# vim:ts=4 sts=4 sw=4 et
