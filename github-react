#!/usr/bin/env bash

# Copyright Â© 2017-2022 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

usage()
{
    printf 'Usage: %s REACTION URL\n' "${0##*/}"
    printf 'Reactions: +1 -1 :D :/ <3 \o/ ! oO\n'
    printf 'URLs: https://github.com/OWNER/REPO/issues/N\n'
}

set -e -u
if [ $# -ne 2 ]
then
    usage >&2
    exit 1
fi
reaction="$1"
url="$2"
case $reaction in
    '+1'|'-1')
        ;;
    ':D')
        reaction=laugh;;
    ':/')
        reaction=confused;;
    '<3')
        reaction=heart;;
    '\o/')
        reaction=hooray;;
    '!')
        reaction=rocket;;
    'oO')
        reaction=eyes;;
    *)
        usage >&2
        exit 1;;
esac
re='^https://github[.]com/([^/]+)/([^/]+)/(issues|pull)/([0-9]+)(#issuecomment-([0-9]+))?$'
if [[ $url =~ $re ]]
then
    owner=${BASH_REMATCH[1]}
    repo=${BASH_REMATCH[2]}
    number=${BASH_REMATCH[4]}
    comment=${BASH_REMATCH[6]}
else
    usage >&2
    exit 1
fi
url='https://api.github.com/repos'
if [ -n "$comment" ]
then
    url="$url/$owner/$repo/issues/comments/$comment/reactions"
else
    url="$url/$owner/$repo/issues/$number/reactions"
fi
case ${0##*-} in
    react)
        printf '%s %s\n' POST "$url" >&2
        json='{"content":"'"$reaction"'"}'
        gh api "$url" --input - <<< "$json" > /dev/null
        ;;
    unreact)
        declare -i uid
        uid=$(gh api 'https://api.github.com/user' --jq '.id')
        jq='.[] | select(.content == "'"$reaction"'" and .user.id == '"$uid"') | .id'
        declare -i rid
        rid=$(gh api "$url" --jq "$jq")
        url="$url/$rid"
        printf '%s %s\n' DELETE "$url" >&2
        gh api "$url" --method=DELETE
        ;;
    *)
        printf '%s: command not implemented\n' "${0##*/}" >&2
        exit 1
esac

# vim:ts=4 sts=4 sw=4 et
