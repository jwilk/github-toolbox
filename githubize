#!/bin/sh

# Copyright Â© 2017-2024 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

prog="${0##*/}"
usage()
{
    cat <<EOF
Usage: $prog [-r REMOTE]
EOF
    if [ "${1-}" = 'long' ]
    then
        cat <<EOF

Set up repository for git-hub <https://github.com/sociomantic-tsunami/git-hub>.

Options:
  -r REMOTE   use this remote
  -h, --help  show this help message and exit
EOF
    fi
}

set -e -u
remote=origin
while getopts 'r:h-:' opt
do
    case "$opt" in
        r)
            remote="$OPTARG";;
        h)
            usage long
            exit 0;;
        -)
            if [ "$OPTARG" = help ]; then
                usage
                exit 0
            else
                usage >&2
                exit 1
            fi
            ;;
        *) exit 1;;
    esac
done
shift $((OPTIND - 1))
if [ $# != 0 ]
then
    usage >&2
    exit 1
fi
ref=$(git symbolic-ref HEAD)
ref=${ref#refs/heads/}
git rev-list -0 "refs/remotes/origin/$ref" -- > /dev/null
origin_url=$(git remote get-url "$remote")
origin_url=${origin_url%/}
origin_url=${origin_url%.git}
upstream=${origin_url#https://github.com/}
if [ "$upstream" = "$origin_url" ]
then
    upstream=${upstream#git@github.com:}
fi
if [ "$upstream" = "$origin_url" ]
then
    printf "githubize: %s doesn't look like a GitHub URL\\n" "$origin_url" >&2
    exit 1
fi
username=$(git config --get hub.username)-forks
fork="$username/${upstream#*/}"
fork_url="https://github.com/$fork.git"
git config --replace-all remote.pushdefault fork
git config --replace-all hub.forkremote fork
git config --replace-all hub.urltype clone_url
git config --replace-all hub.upstream "$upstream"
git config --replace-all hub.forkrepo "$fork"
git config --replace-all hub.pullbase "$ref"
git remote add fork "$fork_url"

# vim:ts=4 sts=4 sw=4 et
