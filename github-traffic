#!/usr/bin/env bash

# Copyright Â© 2018 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

usage()
{
    printf 'Usage: %s {-r|-p|-v|-c} REPO\n' "${0##*/}"
    if [[ ${1-} == long ]]
    then
        printf '\n'
        cat <<'EOF'
Options:
  -r          show popular referrers
  -p          show popular paths
  -v          show views
  -c          show clones
  -h, --help  show this help message and exit
EOF
    fi
}

get_curl_config()
{
    printf "header = \"Authorization: token %s\"\n" "$github_token"
    if [ -n "$cacert" ]
    then
        printf 'capath = "/nonexistent"\n'
        printf 'cacert = "%s"\n' "$cacert"
    fi
}

set -e -u
cacert=$(git -C / config --get-urlmatch http.sslCAInfo https://api.github.com/) || true
github_token=$(perl -n -E '/^token\s*=\s*(\S+)/ and say $1' "${XDG_DATA_HOME:-$HOME/.config}"/cligh/cligh.conf)
type=
while getopts 'rpvch-:' opt
do
    case "$opt" in
        r|p|v|c)
            type="$opt";;
        h)
            usage long
            exit 0;;
        -)
            if [[ $OPTARG == help ]]; then
                usage long
                exit 0
            else
                usage >&2
                exit 1
            fi
            ;;
        *) exit 1;;
    esac
done
shift $((OPTIND - 1))
if [[ -z $type ]] || [ $# -ne 1 ]
then
    usage >&2
    exit 1
fi
repo="$1"
[[ $repo == "${repo#*/}" ]] && repo="$USER/$repo"
repo=${repo#https://github.com/}
url="https://api.github.com/repos/$repo/traffic"
node=''
case "$type" in
    r)
        suffix=popular/referrers
        columns='referrer'
        ;;
    p)
        suffix=popular/paths
        columns='path title'
        ;;
    v)
        suffix=views
        columns='timestamp'
        node=views
        ;;
    c)
        suffix=clones
        node=clones
        columns='timestamp'
        ;;
esac
url="$url/$suffix"
jq=".$node[] | [.count, .uniques$(printf ', .%s' $columns)] | @tsv"
printf 'GET %s\n' "$url" >&2
res=$(curl \
    --silent --fail --show-error \
    -K <(get_curl_config) \
    -H 'User-Agent: github-traffic (https://github.com/jwilk/github-toolbox)' \
    -H 'Accept: application/vnd.github.v3+json' \
    "$url"
)
jq -r "$jq" <<<"$res"

# vim:ts=4 sts=4 sw=4 et
